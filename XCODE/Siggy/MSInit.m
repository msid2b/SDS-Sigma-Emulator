//
//  MSInit.m
//  Siggy
//
//  Created by MS on 2023-02-01.
//

#import <Foundation/Foundation.h>


NSString *applicationCompileDate(void) {
    return [NSString stringWithUTF8String:__DATE__];
}

NSString *applicationCompileTime(void) {
    return [NSString stringWithUTF8String:__TIME__];
}

#include "sqlite3.h"
void sqlSetThreading (void) {
    sqlite3_config(SQLITE_CONFIG_SERIALIZED);
    
}

// MARK: THE FOLLOWING ARE JUST SIMPLER AND CLEANER WHEN IMPLEMENTED IN C INSTEAD OF SWIFT.
static unsigned char  e2a[] = {
    0x00, 0x01, 0x02, 0x03, 0x04, 0x09, 0x06, 0x07, 0x08, 0x05, 0x15, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
    0x10, 0x11, 0x12, 0x13, 0x14, 0x0A, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x2E, 0x3C, 0x28, 0x2B, 0x7C,
    0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x24, 0x2A, 0x29, 0x3B, 0x7E,
    0x2D, 0x2F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5E, 0x2C, 0x25, 0x5F, 0x3E, 0x3F,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3A, 0x23, 0x40, 0x27, 0x3D, 0x22,
    0x00, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x5C, 0x7B, 0x7D, 0x5B, 0x5D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x7B, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x7D, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F, 0x50, 0x51, 0x52, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E  };

unsigned char dottedAsciiFromEbcdicC (unsigned char e) {
    unsigned char a = e2a[e];
    if (a >= 0x20) { return a; }
    return 0x2E;
}


static unsigned char hexit[] = "0123456789ABCDEF" ;
void hexOutC (unsigned char *b, uint32 value, int width) {
    int i;
    
    for (i=width-1; i >= 0; i--) {
        b[i] = hexit[value & 0xF];
        value >>= 4;
    }
    
}


// MARK: Formats up to 8 words and corresponding text for a line of hex dump.
NSString *hexDumpLineC (const uint8 *buffer, int start, int count, uint32 apparentAddress, uint32 addressWidth, uint32 addressShift) {
    int aw = (addressWidth > 0) ? addressWidth : 6;
    int ll = 80 - (4 - addressWidth);
    
    unsigned char buf[128]; memset (buf, 0x20, 127); buf[127] = 0;
    int x = start;
    
    hexOutC (buf, apparentAddress + (x >> addressShift), aw);
    int i = 0;
    while ((x < count) && (i < 32)) {
        int b = buffer[x];
        x++;
        
        hexOutC (&buf[aw + 2 + (i * 2) + (i >> 2) + (i >> 4)], b, 2);
        buf[ll+i] = dottedAsciiFromEbcdicC(b);
        i++;
    }
     
    return [NSString stringWithUTF8String:(char *)buf];

}
